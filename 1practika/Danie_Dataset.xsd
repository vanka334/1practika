<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Danie_Dataset" targetNamespace="http://tempuri.org/Danie_Dataset.xsd" xmlns:mstns="http://tempuri.org/Danie_Dataset.xsd" xmlns="http://tempuri.org/Danie_Dataset.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Practice1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Practice1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings._1practika.Properties.Settings.GlobalReference.Default.Practice1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BrigadeTableAdapter" GeneratorDataComponentClassName="BrigadeTableAdapter" Name="Brigade" UserDataComponentName="BrigadeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Practice1ConnectionString (Settings)" DbObjectName="Practice1.dbo.Brigade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Brigade] WHERE (([Id] = @Original_Id) AND ([Name_of_Brigade] = @Original_Name_of_Brigade))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name_of_Brigade" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_Brigade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Brigade] ([Id], [Name_of_Brigade]) VALUES (@Id, @Name_of_Brigade);
SELECT Id, Name_of_Brigade FROM Brigade WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name_of_Brigade" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_Brigade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name_of_Brigade FROM dbo.Brigade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Brigade] SET [Id] = @Id, [Name_of_Brigade] = @Name_of_Brigade WHERE (([Id] = @Original_Id) AND ([Name_of_Brigade] = @Original_Name_of_Brigade));
SELECT Id, Name_of_Brigade FROM Brigade WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name_of_Brigade" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_Brigade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name_of_Brigade" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_Brigade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name_of_Brigade" DataSetColumn="Name_of_Brigade" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ObjectTableAdapter" GeneratorDataComponentClassName="ObjectTableAdapter" Name="Object" UserDataComponentName="ObjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Practice1ConnectionString (Settings)" DbObjectName="Practice1.dbo.Object" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Object] WHERE (([Id] = @Original_Id) AND ([Type] = @Original_Type) AND ([Brigades] = @Original_Brigades))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Brigades" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Brigades" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Object] ([Type], [Brigades]) VALUES (@Type, @Brigades);
SELECT Id, Type, Brigades FROM Object WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Brigades" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Brigades" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Type, Brigades FROM dbo.Object</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Object] SET [Type] = @Type, [Brigades] = @Brigades WHERE (([Id] = @Original_Id) AND ([Type] = @Original_Type) AND ([Brigades] = @Original_Brigades));
SELECT Id, Type, Brigades FROM Object WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Brigades" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Brigades" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Brigades" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Brigades" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="Brigades" DataSetColumn="Brigades" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="type_ObjectTableAdapter" GeneratorDataComponentClassName="type_ObjectTableAdapter" Name="type_Object" UserDataComponentName="type_ObjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Practice1ConnectionString (Settings)" DbObjectName="Practice1.dbo.type_Object" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[type_Object] WHERE (([Id] = @Original_Id) AND ([Name_of_type] = @Original_Name_of_type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name_of_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[type_Object] ([Id], [Name_of_type]) VALUES (@Id, @Name_of_type);
SELECT Id, Name_of_type FROM type_Object WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name_of_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name_of_type FROM dbo.type_Object</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[type_Object] SET [Id] = @Id, [Name_of_type] = @Name_of_type WHERE (([Id] = @Original_Id) AND ([Name_of_type] = @Original_Name_of_type));
SELECT Id, Name_of_type FROM type_Object WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name_of_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name_of_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name_of_type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name_of_type" DataSetColumn="Name_of_type" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Danie_Dataset" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="Danie_Dataset" msprop:Generator_DataSetName="Danie_Dataset">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Brigade" msprop:Generator_RowEvHandlerName="BrigadeRowChangeEventHandler" msprop:Generator_RowDeletedName="BrigadeRowDeleted" msprop:Generator_RowDeletingName="BrigadeRowDeleting" msprop:Generator_RowEvArgName="BrigadeRowChangeEvent" msprop:Generator_TablePropName="Brigade" msprop:Generator_RowChangedName="BrigadeRowChanged" msprop:Generator_RowChangingName="BrigadeRowChanging" msprop:Generator_TableClassName="BrigadeDataTable" msprop:Generator_RowClassName="BrigadeRow" msprop:Generator_TableVarName="tableBrigade" msprop:Generator_UserTableName="Brigade">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name_of_Brigade" msprop:Generator_ColumnPropNameInRow="Name_of_Brigade" msprop:Generator_ColumnPropNameInTable="Name_of_BrigadeColumn" msprop:Generator_ColumnVarNameInTable="columnName_of_Brigade" msprop:Generator_UserColumnName="Name_of_Brigade">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Object" msprop:Generator_RowEvHandlerName="ObjectRowChangeEventHandler" msprop:Generator_RowDeletedName="ObjectRowDeleted" msprop:Generator_RowDeletingName="ObjectRowDeleting" msprop:Generator_RowEvArgName="ObjectRowChangeEvent" msprop:Generator_TablePropName="Object" msprop:Generator_RowChangedName="ObjectRowChanged" msprop:Generator_RowChangingName="ObjectRowChanging" msprop:Generator_TableClassName="ObjectDataTable" msprop:Generator_RowClassName="ObjectRow" msprop:Generator_TableVarName="tableObject" msprop:Generator_UserTableName="Object">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Type" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_UserColumnName="Type" type="xs:int" />
              <xs:element name="Brigades" msprop:Generator_ColumnPropNameInRow="Brigades" msprop:Generator_ColumnPropNameInTable="BrigadesColumn" msprop:Generator_ColumnVarNameInTable="columnBrigades" msprop:Generator_UserColumnName="Brigades" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="type_Object" msprop:Generator_RowEvHandlerName="type_ObjectRowChangeEventHandler" msprop:Generator_RowDeletedName="type_ObjectRowDeleted" msprop:Generator_RowDeletingName="type_ObjectRowDeleting" msprop:Generator_RowEvArgName="type_ObjectRowChangeEvent" msprop:Generator_TablePropName="type_Object" msprop:Generator_RowChangedName="type_ObjectRowChanged" msprop:Generator_RowChangingName="type_ObjectRowChanging" msprop:Generator_TableClassName="type_ObjectDataTable" msprop:Generator_RowClassName="type_ObjectRow" msprop:Generator_TableVarName="tabletype_Object" msprop:Generator_UserTableName="type_Object">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name_of_type" msprop:Generator_ColumnPropNameInRow="Name_of_type" msprop:Generator_ColumnPropNameInTable="Name_of_typeColumn" msprop:Generator_ColumnVarNameInTable="columnName_of_type" msprop:Generator_UserColumnName="Name_of_type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Brigade" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Object_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Object" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="type_Object_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:type_Object" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Object__Brigades__3C69FB99" msdata:parent="Brigade" msdata:child="Object" msdata:parentkey="Id" msdata:childkey="Brigades" msprop:Generator_UserParentTable="Brigade" msprop:Generator_UserChildTable="Object" msprop:Generator_RelationVarName="relationFK__Object__Brigades__3C69FB99" msprop:Generator_ChildPropName="GetObjectRows" msprop:Generator_ParentPropName="BrigadeRow" msprop:Generator_UserRelationName="FK__Object__Brigades__3C69FB99" />
      <msdata:Relationship name="FK__Object__Type__3B75D760" msdata:parent="type_Object" msdata:child="Object" msdata:parentkey="Id" msdata:childkey="Type" msprop:Generator_UserParentTable="type_Object" msprop:Generator_UserChildTable="Object" msprop:Generator_RelationVarName="relationFK__Object__Type__3B75D760" msprop:Generator_UserRelationName="FK__Object__Type__3B75D760" msprop:Generator_ChildPropName="GetObjectRows" msprop:Generator_ParentPropName="type_ObjectRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>